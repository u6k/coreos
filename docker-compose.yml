version: '2'

services:
    fluentd:
        image: fluent/fluentd
        ports:
            - "24224:24224"
        volumes:
            - "${DOCKER_VOLUMES}/fluentd/data:/fluentd/log"
        restart: always
    nginx-proxy:
        image: u6kapps/nginx-proxy
        privileged: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "${DOCKER_VOLUMES}/nginx-proxy/certs:/etc/certs:ro"
            - "${DOCKER_VOLUMES}/nginx-proxy/htpasswd:/etc/nginx/htpasswd:ro"
            - "/etc/nginx/vhost.d"
            - "/usr/share/nginx/html"
            - "/var/run/docker.sock:/tmp/docker.sock:ro"
        depends_on:
            - fluentd
        logging:
            driver: fluentd
        restart: always
    cert:
        image: jrcs/letsencrypt-nginx-proxy-companion
        privileged: true
        volumes:
            - "${DOCKER_VOLUMES}/nginx-proxy/certs:/etc/nginx/certs:rw"
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        volumes_from:
            - nginx-proxy
        depends_on:
            - fluentd
            - nginx-proxy
        logging:
            driver: fluentd
        restart: always
    dnsmasq:
        image: jpillora/dnsmasq
        ports:
            - "53:53/udp"
        volumes:
            - "${DOCKER_VOLUMES}/dnsmasq/dnsmasq.conf:/etc/dnsmasq.conf"
        environment:
            - "USER=${DOCKER_DNSMASQ_USER}"
            - "PASS=${DOCKER_DNSMASQ_PASS}"
            - "VIRTUAL_HOST=dns.u6k.me"
            - "VIRTUAL_PORT=8080"
            - "LETSENCRYPT_HOST=dns.u6k.me"
            - "LETSENCRYPT_EMAIL=u6k.apps@gmail.com"
        depends_on:
            - fluentd
            - nginx-proxy
        logging:
            driver: fluentd
        restart: always
    blog:
        image: u6kapps/blog
        environment:
            - "VIRTUAL_HOST=blog.u6k.me"
            - "VIRTUAL_PORT=80"
            - "LETSENCRYPT_HOST=blog.u6k.me"
            - "LETSENCRYPT_EMAIL=u6k.apps@gmail.com"
        depends_on:
            - fluentd
            - nginx-proxy
        logging:
            driver: fluentd
        restart: always
    redmine:
        image: u6kapps/redmine
        volumes:
            - "${DOCKER_VOLUMES}/redmine/attachment-file:/usr/src/redmine/files"
            - "/etc/localtime:/etc/localtime:ro"
        environment:
            - "REDMINE_DB_POSTGRES=redmine-db"
            - "REDMINE_DB_USERNAME=${DOCKER_REDMINE_DB_USERNAME}"
            - "REDMINE_DB_PASSWORD=${DOCKER_REDMINE_DB_PASSWORD}"
            - "REDMINE_DB_DATABASE=${DOCKER_REDMINE_DB_DATABASE}"
            - "VIRTUAL_HOST=redmine.u6k.me"
            - "VIRTUAL_PORT=3000"
            - "LETSENCRYPT_HOST=redmine.u6k.me"
            - "LETSENCRYPT_EMAIL=u6k.apps@gmail.com"
        links:
            - "redmine-db"
        depends_on:
            - fluentd
            - nginx-proxy
            - redmine-db
        logging:
            driver: fluentd
        restart: always
    redmine-db:
        image: postgres
        volumes:
            - "${DOCKER_VOLUMES}/redmine/db:/var/lib/postgresql/data"
        environment:
            - "POSTGRES_USER=${DOCKER_REDMINE_DB_USERNAME}"
            - "POSTGRES_PASSWORD=${DOCKER_REDMINE_DB_PASSWORD}"
            - "POSTGRES_DB=${DOCKER_REDMINE_DB_DATABASE}"
        depends_on:
            - fluentd
        logging:
            driver: fluentd
        restart: always
    minio:
        image: minio/minio
        volumes:
            - "${DOCKER_VOLUMES}/minio/export:/export"
            - "${DOCKER_VOLUMES}/minio/config:/root/.minio"
        environment:
            - "VIRTUAL_HOST=s3.u6k.me"
            - "VIRTUAL_PORT=9000"
            - "LETSENCRYPT_HOST=s3.u6k.me"
            - "LETSENCRYPT_EMAIL=u6k.apps@gmail.com"
        command: server /export
        depends_on:
            - fluentd
            - nginx-proxy
        logging:
            driver: fluentd
        restart: always
    owncloud:
        image: owncloud
        volumes:
            - "${DOCKER_VOLUMES}/owncloud:/var/www/html"
        environment:
            - "VIRTUAL_HOST=owncloud.u6k.me"
            - "VIRTUAL_PORT=80"
            - "LETSENCRYPT_HOST=owncloud.u6k.me"
            - "LETSENCRYPT_EMAIL=u6k.apps@gmail.com"
        links:
            - "owncloud-db"
        depends_on:
            - fluentd
            - nginx-proxy
            - owncloud-db
        logging:
            driver: fluentd
        restart: always
    owncloud-db:
        image: postgres
        environment:
            - "POSTGRES_USER=${DOCKER_OWNCLOUD_DB_USER}"
            - "POSTGRES_PASSWORD=${DOCKER_OWNCLOUD_DB_PASS}"
            - "POSTGRES_DB=${DOCKER_OWNCLOUD_DB_NAME}"
        depends_on:
            - fluentd
        logging:
            driver: fluentd
        restart: always
    bookmark:
        image: u6kapps/bookmark-bundler
        volumes:
            - "${DOCKER_VOLUMES}/bookmark/hsqldb:/var/lib/bookmark/hsqldb"
        environment:
            - "VIRTUAL_HOST=bookmark.u6k.me"
            - "VIRTUAL_PORT=8080"
            - "LETSENCRYPT_HOST=bookmark.u6k.me"
            - "LETSENCRYPT_EMAIL=u6k.apps@gmail.com"
        depends_on:
            - fluentd
            - nginx-proxy
        logging:
            driver: fluentd
        restart: always
    ceron-analyze:
        image: u6kapps/ceron-analyze
        environment:
            - "S3_URL=http://s3:9000/"
            - "S3_BUCKET=ceron"
            - "S3_ACCESS_ID=${DOCKER_CERON_S3_ACCESS_ID}"
            - "S3_SECRET_KEY=${DOCKER_CERON_S3_SECRET_KEY}"
        links:
            - "minio:s3"
        depends_on:
            - fluentd
            - minio
        logging:
            driver: fluentd
        restart: always
    narou-analyze:
        image: u6kapps/narou-crawler
        environment:
            - "NAROU_CRAWLER_DB_HOST=narou-analyze-db"
            - "NAROU_CRAWLER_DB_USER=${DOCKER_NAROU_ANALYZE_DB_USER}"
            - "NAROU_CRAWLER_DB_PASS=${DOCKER_NAROU_ANALYZE_DB_PASS}"
            - "NAROU_CRAWLER_DB_NAME=${DOCKER_NAROU_ANALYZE_DB_NAME}"
        links:
            - narou-analyze-db
        depends_on:
            - fluentd
            - narou-analyze-db
        logging:
            driver: fluentd
        restart: always
    narou-analyze-db:
        image: postgres
        environment:
            - "POSTGRES_USER=${DOCKER_NAROU_ANALYZE_DB_USER}"
            - "POSTGRES_PASSWORD=${DOCKER_NAROU_ANALYZE_DB_PASS}"
            - "POSTGRES_DB=${DOCKER_NAROU_ANALYZE_DB_NAME}"
        depends_on:
            - fluentd
        logging:
            driver: fluentd
        restart: always
    jenkins:
        image: u6kapps/jenkins
        volumes:
            - "${DOCKER_VOLUMES}/jenkins:/root/.jenkins"
            - "/var/run/docker.sock:/var/run/docker.sock"
        environment:
            - "VIRTUAL_HOST=jenkins.u6k.me"
            - "VIRTUAL_PORT=8080"
            - "LETSENCRYPT_HOST=jenkins.u6k.me"
            - "LETSENCRYPT_EMAIL=u6k.apps@gmail.com"
        links:
            - "minio:s3"
            - "narou-analyze"
            - "ceron-analyze"
        depends_on:
            - fluentd
            - nginx-proxy
            - minio
            - ceron-analyze
            - narou-analyze
        logging:
            driver: fluentd
        restart: always
