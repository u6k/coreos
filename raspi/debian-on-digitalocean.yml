- hosts: localhost
  become: yes
  user: root
  vars_files:
    - settings.yml
  tasks:
    # Setting sudo
    - name: Add Wheel group
      group:
        name: wheel
    - name: Allow wheel group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
    # Setting User
    - name: Add User
      user:
        name: '{{sshd_user}}'
        groups: wheel
        shell: /bin/bash
    - name: mkdir .ssh
      file:
        dest: '/home/{{sshd_user}}/.ssh/'
        state: directory
        owner: '{{sshd_user}}'
        group: '{{sshd_user}}'
        mode: 0700 
    - name: Create authorized keys
      file:
        dest: '/home/{{sshd_user}}/.ssh/authorized_keys'
        state: touch
        owner: '{{sshd_user}}'
        group: '{{sshd_user}}'
        mode: 0600
    - name: Copy public key
      template:
        src: 'id_rsa.pub'
        dest: '/home/{{sshd_user}}/.ssh/authorized_keys'
    # Setting SSH
    - name: Setting SSH
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '{{item.regexp}}'
        insertafter: '{{item.insertafter}}'
        line: '{{item.line}}'
        backup: true
      with_items:
          - { regexp: '^RhostsRSAAuthentication', insertafter: '^#RhostsRSAAuthentication', line: 'RhostsRSAAuthentication no' }
          - { regexp: '^HostbasedAuthentication', insertafter: '^#HostbasedAuthentication', line: 'HostbasedAuthentication no' }
          - { regexp: '^IgnoreRhosts', insertafter: '^#IgnoreRhosts', line: 'IgnoreRhosts yes' }
          - { regexp: '^PubkeyAuthentication', insertafter: '^#PubkeyAuthentication', line: 'PubkeyAuthentication yes' }
          - { regexp: '^AuthorizedKeysFile', insertafter: '^#AuthorizedKeysFile', line: 'AuthorizedKeysFile .ssh/authorized_keys' }
          - { regexp: '^PasswordAuthentication', insertafter: '^#PasswordAuthentication', line: 'PasswordAuthentication no' }
          - { regexp: '^PermitEmptyPasswords', insertafter: '^#PermitEmptyPasswords', line: 'PermitEmptyPasswords no' }
          - { regexp: '^ChallengeResponseAuthentication', insertafter: '^#ChallengeResponseAuthentication', line: 'ChallengeResponseAuthentication no' }
          - { regexp: '^PermitRootLogin', insertafter: '^#PermitRootLogin', line: 'PermitRootLogin no' }
          - { regexp: '^Port', insertafter: '^#Port', line: 'Port {{sshd_port}}' }
          - { regexp: '^AllowUsers', insertafter: '^#AllowUsers', line: 'AllowUsers {{sshd_user}}' }
          - { regexp: '^Protocol', insertafter: '^#Protocol', line: 'Protocol 2' }
    - name: Restart SSHd
      service:
        name: ssh
        state: restarted
    # Setting Timezone
    - name: Setting Timezone
      timezone:
        name: Asia/Tokyo
    # Setting NTP
    - name: Install NTP
      apt: name=ntp update_cache=yes
    - name: Setting NTP (1/2)
      replace:
        dest: /etc/ntp.conf
        regexp: '^pool'
        replace: '#pool'
        backup: true
    - name: Setting NTP (2/2)
      lineinfile:
        dest: /etc/ntp.conf
        insertafter: '^#pool'
        line: '{{item}}'
        backup: true
      with_items:
        - 'server ntp2.ring.gr.jp'
        - 'server ntp1.ring.gr.jp'
        - 'server ntp0.ring.gr.jp'
    - name: Restart NTPd
      service:
        name: ntp
        state: restarted
    # Install Softwares
    - name: Install Softwares
      apt: name={{item}} update_cache=yes
      with_items:
        - git
        - git-flow
        - tig
        - tmux
        - qemu
        - unzip
    # Setting git
    - name: Copy git config
      template:
        src: 'gitconfig'
        dest: '/home/{{sshd_user}}/.gitconfig'
        owner: '{{sshd_user}}'
        group: '{{sshd_user}}'
    - name: Setting git config
      lineinfile:
        dest: '/home/{{sshd_user}}/.gitconfig'
        insertafter: '^\[user\]&'
        line: '{{item}}'
      with_items:
        - '  name = {{git_user_name}}'
        - '  email = {{git_user_email}}'
    # Setup Raspberry Pi simulator
    - name: Create raspi directory
      file:
        path: /var/raspi
        state: directory
        owner: '{{sshd_user}}'
        group: '{{sshd_user}}'
    - name: Download Raspbian image
      get_url:
        url: https://downloads.raspberrypi.org/raspbian_lite_latest
        dest: /var/raspi/raspbian_lite_latest.zip
        owner: '{{sshd_user}}'
        group: '{{sshd_user}}'
    - name: Unzip Raspbian image
      unarchive:
        src: /var/raspi/raspbian_lite_latest.zip
        dest: /var/raspi/
        owner: '{{sshd_user}}'
        group: '{{sshd_user}}'
    - name: Resize Raspbian image
      shell: qemu-img resize 2018-11-13-raspbian-stretch-lite.img +8G
      args:
        chdir: /var/raspi
    - name: Create swap storage
      shell: qemu-img create -f raw temp.img 4G
      args:
        chdir: /var/raspi
    - name: Change file owner of swap storage
      file:
        path: /var/raspi/temp.img
        owner: '{{sshd_user}}'
        group: '{{sshd_user}}'
    - name: Download QEMU kernel driver
      get_url:
        url: https://github.com/dhruvvyas90/qemu-rpi-kernel/raw/master/kernel-qemu-4.14.50-stretch
        dest: /var/raspi/
        owner: '{{sshd_user}}'
        group: '{{sshd_user}}'
    - name: Download versatile-pb
      get_url:
        url: https://github.com/dhruvvyas90/qemu-rpi-kernel/raw/master/versatile-pb.dtb
        dest: /var/raspi/
        owner: '{{sshd_user}}'
        group: '{{sshd_user}}'
    - name: Create start qemu shell
      copy:
        dest: /var/raspi/start-raspi.sh
        mode: 0777
        owner: '{{sshd_user}}'
        group: '{{sshd_user}}'
        content: |
          qemu-system-arm \
            -kernel kernel-qemu-4.14.50-stretch \
            -cpu arm1176 \
            -M versatilepb \
            -dtb versatile-pb.dtb \
            -m 256 \
            -no-reboot \
            -serial stdio \
            -append "root=/dev/sda2 panic=1 rootfstype=ext4 rw" \
            -hda 2018-11-13-raspbian-stretch-lite.img \
            -hdb temp.img \
            -net nic \
            -net user,hostfwd=tcp::10022-:22 \
            -curses
