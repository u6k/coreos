version: '3'

services:
  app:
    image: u6kapps/scoring-horse-racing
    environment:
      - "RAILS_ENV=${DOCKER_SCORING_HORSE_RACING_RAILS_ENV}"
      - "RAILS_LOG_TO_STDOUT=true"
      - "SECRET_KEY_BASE=${DOCKER_SCORING_HORSE_RACING_SECRET_KEY_BASE}"
      - "DB_HOST=${DOCKER_SCORING_HORSE_RACING_DB_HOST}"
      - "DB_USERNAME=${DOCKER_SCORING_HORSE_RACING_DB_USER}"
      - "DB_PASSWORD=${DOCKER_SCORING_HORSE_RACING_DB_PASS}"
      - "DB_DATABASE=${DOCKER_SCORING_HORSE_RACING_DB_NAME}"
      - "S3_ENDPOINT=${DOCKER_SCORING_HORSE_RACING_S3_ENDPOINT}"
      - "S3_REGION=${DOCKER_SCORING_HORSE_RACING_S3_REGION}"
      - "S3_ACCESS_KEY=${DOCKER_SCORING_HORSE_RACING_S3_ACCESS_KEY}"
      - "S3_SECRET_KEY=${DOCKER_SCORING_HORSE_RACING_S3_SECRET_KEY}"
      - "S3_BUCKET=${DOCKER_SCORING_HORSE_RACING_S3_BUCKET}"
      - "VIRTUAL_HOST=${DOCKER_SCORING_HORSE_RACING_VIRTUAL_HOST}"
      - "VIRTUAL_PORT=3000"
      - "LETSENCRYPT_HOST=${DOCKER_SCORING_HORSE_RACING_LETSENCRYPT_HOST}"
      - "LETSENCRYPT_EMAIL=${DOCKER_SCORING_HORSE_RACING_LETSENCRYPT_EMAIL}"
    depends_on:
      - db
    restart: always
  db:
    image: postgres:10
    environment:
      - "POSTGRES_USER=${DOCKER_SCORING_HORSE_RACING_DB_USER}"
      - "POSTGRES_PASSWORD=${DOCKER_SCORING_HORSE_RACING_DB_PASS}"
      - "POSTGRES_DB=${DOCKER_SCORING_HORSE_RACING_DB_NAME}"
    volumes:
      - "${DOCKER_VOLUMES}/scoring-horse-racing/db:/var/lib/postgresql/data"
    restart: always

networks:
  default:
    external:
      name: production
